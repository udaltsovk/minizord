name: Backend CI

on:
  push:
    paths:
      - .github/workflows/backend-ci.yml
      - backend/**
    branches: 
      - master
  pull_request:
    paths:
      - backend/**
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, nightly]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: nightly
            os: ubuntu-latest
            rust: nightly
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: |
        rustup update ${{ matrix.rust }} --no-self-update
        rustup default ${{ matrix.rust }}
    - name: Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Run tests
      run: |
        cd ./backend 
        cargo test --all
  check-code:
    name: Check code style
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: |
        rustup update nightly --no-self-update
        rustup default nightly
        rustup component add rustfmt clippy
    - name: Format code using Rustfmt
      run: |
        cd ./backend 
        cargo fmt --all -- --check
    - name: Lint code using Clippy
      run: |
        cd ./backend
        cargo clippy --all -- -D warnings
  check-deps:
    name: Check for unused or insecure dependencies
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: |
        rustup update nightly --no-self-update
        rustup default nightly
    - name: Install cargo-udeps
      run: cargo install cargo-udeps
    - name: Check for unused dependencies with cargo-udeps
      run: |
        cd ./backend
        cargo udeps
    - name: Install cargo-audit
      run: cargo install cargo-audit
    - name: Check for insecure dependencies using cargo-audit
      run: cargo audit
