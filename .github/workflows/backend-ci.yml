name: Backend CI

on:
  push:
    paths:
      - .github/workflows/backend-ci.yml
      - backend/**
    branches: 
      - master
  pull_request:
    paths:
      - backend/**
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        build: [stable, nightly]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: nightly
            os: ubuntu-latest
            rust: nightly
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: |
        rustup update ${{ matrix.rust }} --no-self-update
        rustup default ${{ matrix.rust }}
    - name: Run tests
      run: |
        cargo test --all
  check-code:
    name: Check code style
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: |
        rustup update nightly --no-self-update
        rustup default nightly
        rustup component add rustfmt clippy
    - name: Format code using Rustfmt
      run: |
        cargo fmt --all -- --check
    - name: Lint code using Clippy
      run: |
        cargo clippy --all -- -D warnings
  check-deps:
    name: Check for unused or insecure dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: |
        rustup update nightly --no-self-update
        rustup default nightly
    - name: Install cargo-binstall
      run: cargo install cargo-binstall
    - name: Install cargo-udeps
      run: cargo binstall cargo-udeps
    - name: Check for unused dependencies with cargo-udeps
      run: |
        cargo udeps --all
    - name: Install cargo-audit
      run: cargo binstall cargo-audit
    - name: Check for insecure dependencies using cargo-audit
      run: |
        cargo audit
  docker-api:
    name: Build and publish docker image for the API
    runs-on: ubuntu-latest
    needs: [test, check-code, check-deps]
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch docker metadata
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/udaltsovk/minizord-api
      - name: Login to GitHub Images
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          GIT_HASH: ${{ steps.push-changes.outputs.commit-hash }}
        with:
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            CRATE=api
