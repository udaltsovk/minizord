name: Frontend CI

on:
  push:
    paths:
      - .github/workflows/frontend-ci.yml
      - frontend/**
    branches: 
      - master
  pull_request:
    paths:
      - .github/workflows/frontend-ci.yml
      - frontend/**
    branches:
      - master
  workflow_dispatch:

jobs:
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./frontend
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Install Bun
  #     uses: oven-sh/setup-bun@v2
  #   - name: Run tests
  #     run: |
  #       bun i
  #       bun run test
  check-code:
    name: Check code style
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@master
    - name: Install Bun
      uses: oven-sh/setup-bun@v2
    - name: Format code using prettier
      run: |
        bun i
        bun run format
    - name: Lint code using eslint
      run: |
        bun i
        bun run lint
  docker:
    name: Build and publish docker image
    runs-on: ubuntu-latest
    # needs: [test, check-code]
    needs: [check-code]
    steps:
      - uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Fetch docker metadata
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/udaltsovk/minizord-frontend
      - name: Login to GitHub Images
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          GIT_HASH: ${{ steps.push-changes.outputs.commit-hash }}
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
