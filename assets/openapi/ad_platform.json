{
  "openapi": "3.1.0",
  "info": {
    "title": "utoipa-axum",
    "description": "Utoipa's axum bindings for seamless integration for the two",
    "contact": {
      "name": "Juha Kukkonen",
      "email": "juha7kukkonen@gmail.com"
    },
    "license": {
      "name": "MIT OR Apache-2.0",
      "identifier": "MIT OR Apache-2.0"
    },
    "version": "0.2.0"
  },
  "paths": {
    "/clients/bulk": {
      "post": {
        "tags": [
          "clients"
        ],
        "operationId": "bulk_upsert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpsertJsonClient"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonClient"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonErrorStruct"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{client_id}": {
      "get": {
        "tags": [
          "clients"
        ],
        "operationId": "find_by_id",
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonClient"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonErrorStruct"
                }
              }
            }
          }
        }
      }
    },
    "/time/advance": {
      "post": {
        "operationId": "advance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonTime"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonTime"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonErrorStruct"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JsonClient": {
        "type": "object",
        "required": [
          "id",
          "login",
          "age",
          "gender",
          "location"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "login": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "u-int16",
            "minimum": 0
          },
          "gender": {
            "$ref": "#/components/schemas/JsonClientGender"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "JsonClientGender": {
        "type": "string",
        "enum": [
          "MALE",
          "FEMALE"
        ]
      },
      "JsonErrorStruct": {
        "type": "object",
        "required": [
          "error_code",
          "errors"
        ],
        "properties": {
          "error_code": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "JsonTime": {
        "type": "object",
        "description": "",
        "required": [
          "current_date"
        ],
        "properties": {
          "current_date": {
            "type": "integer",
            "format": "u-int32",
            "description": "Текущий день (целое число).",
            "default": 1,
            "minimum": 1
          }
        }
      },
      "UpsertJsonClient": {
        "type": "object",
        "required": [
          "id",
          "login",
          "age",
          "gender",
          "location"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          "login": {
            "type": "string",
            "description": ""
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          "gender": {
            "$ref": "#/components/schemas/JsonClientGender"
          },
          "location": {
            "type": "string",
            "description": ""
          }
        }
      }
    }
  }
}